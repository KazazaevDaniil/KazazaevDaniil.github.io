<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Учение | Academic</title>
    <link>https://example.com/ru/tag/%D1%83%D1%87%D0%B5%D0%BD%D0%B8%D0%B5/</link>
      <atom:link href="https://example.com/ru/tag/%D1%83%D1%87%D0%B5%D0%BD%D0%B8%D0%B5/index.xml" rel="self" type="application/rss+xml" />
    <description>Учение</description>
    <generator>Hugo Blox Builder (https://hugoblox.com)</generator><language>ru-ru</language><lastBuildDate>Wed, 08 May 2024 00:00:00 +0000</lastBuildDate>
    <image>
      <url>https://example.com/media/icon_hu0b7a4cb9992c9ac0e91bd28ffd38dd00_9727_512x512_fill_lanczos_center_3.png</url>
      <title>Учение</title>
      <link>https://example.com/ru/tag/%D1%83%D1%87%D0%B5%D0%BD%D0%B8%D0%B5/</link>
    </image>
    
    <item>
      <title>Языки научного программирования</title>
      <link>https://example.com/ru/post/post4/</link>
      <pubDate>Wed, 08 May 2024 00:00:00 +0000</pubDate>
      <guid>https://example.com/ru/post/post4/</guid>
      <description>&lt;p&gt;Программы и языки программирования играют важную роль в современной науке, так как они позволяют ученым и инженерам анализировать данные, моделировать сложные явления и проводить вычислительные эксперименты. Рассмотрим несколько примеров их использования в различных областях науки.&lt;/p&gt;
&lt;p&gt;В физике часто используются такие языки программирования, как Python и C++, а также специализированные программные пакеты, такие как COMSOL Multiphysics для моделирования физических процессов и Mathematica или Maple для символьных вычислений. Программы типа LAMMPS или GROMACS используются в молекулярной динамике для изучения движения атомов и молекул.&lt;/p&gt;
&lt;p&gt;В химии распространены программы для молекулярного моделирования и квантовой химии, такие как Gaussian, Autodesk Moldflow для моделирования процессов литья пластмасс, и Materials Studio для исследования свойств материалов. Программа, упомянутая Otoro, может относиться к программам типа GAMESS или NWChem, которые также используются для расчетов энергии молекул.&lt;/p&gt;
&lt;p&gt;Python является одним из самых популярных языков, как отметил thunderer_s, благодаря своей гибкости и большому количеству научных библиотек, таких как NumPy для численных расчетов, SciPy для научных вычислений, Pandas для анализа данных, и Matplotlib для визуализации данных.&lt;/p&gt;
&lt;p&gt;MATLAB, упомянутый thunderer_s, действительно широко используется в инженерии и прикладной математике за счет своих мощных инструментов для численного анализа и встроенных функций для решения математических задач.&lt;/p&gt;
&lt;p&gt;R, как указал aisford, является предпочтительным выбором для статистического анализа и графики, с богатым набором пакетов для статистических тестов, классификации данных, регрессионного анализа и многого другого.&lt;/p&gt;
&lt;p&gt;Кроме того, в биологии и биоинформатике часто используются такие инструменты, как BLAST для сравнения биологических последовательностей и PyMOL или Chimera для визуализации молекулярных структур.&lt;/p&gt;
&lt;p&gt;В целом, выбор программы или языка программирования зависит от конкретной задачи, требований к вычислительной мощности, доступности библиотек и инструментов, а также личных предпочтений исследователя.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Оформление отчета по ГОСТу</title>
      <link>https://example.com/ru/post/post3/</link>
      <pubDate>Wed, 27 Mar 2024 00:00:00 +0000</pubDate>
      <guid>https://example.com/ru/post/post3/</guid>
      <description>&lt;p&gt;Составляя отчет по практике, студент оценивает результаты работы и делает выводы о своей квалификации, знаниях и навыках, полученных в вузе. Чтобы работу приняли, она должна быть не только грамотной и содержательной.&lt;/p&gt;
&lt;p&gt;Обычно требования к оформлению отчета прописывают в методичках. Если таковых не осталось на кафедре или в библиотеке, обратитесь к нормативным документам.&lt;/p&gt;
&lt;h1 id=&#34;структура&#34;&gt;Структура&lt;/h1&gt;
&lt;p&gt;Отчет может содержать до 35-40 страниц. В некоторых случаях допускается увеличивать объем до 45 страниц. При этом на введение отводят две-три страницы. В работе может быть до четырех разделов.&lt;/p&gt;
&lt;p&gt;Согласно ГОСТам, отчет по практике должен иметь следующую структуру:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;— титульный лист;
— план прохождения практики;
— отзыв руководителя;
— аннотация;
— раздел с сокращениями и условными обозначениями;
— оглавление и введение;
— основная часть практической работы;
— заключение;
— использованная литература списком;
— приложения и дополнительные материалы.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Приложения включаются в практику по мере необходимости.&lt;/p&gt;
&lt;h1 id=&#34;требования-к-оформлению-работы&#34;&gt;Требования к оформлению работы&lt;/h1&gt;
&lt;p&gt;Оформление работы по ГОСТ подразумевает не только строгую структуру, но и выбор определенных шрифтов и их размеров, грамотное оформление списка литературы и правильное размещение графических элементов в тексте.&lt;/p&gt;
&lt;p&gt;Текстовую часть практической работы выполняют тремя основными способами:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;— на компьютере согласно ГОСТ 2.004;
— на пишущей машинке;
— от руки – согласно ГОСТ 2.304 (речь идет об использовании чертежного шрифта).
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Если отчет набирают на компьютере и распечатывают на принтере, то работать следует в Word или аналогичном редакторе. Распечатывают отчет на листах А4. Текст набирают шрифтом Times New Roman. Заголовки разделов имеют размер шрифта 16 пунктов, заголовки подразделов — 14 пунктов. Основной текст выполняют обычным шрифтом размером в 14 пунктов. Шрифт в разделах и подразделах полужирный. При оформлении нужно выбрать одинарный межстрочный интервал.&lt;/p&gt;
&lt;h1 id=&#34;разделыподразделы-отчета&#34;&gt;Разделы/подразделы отчета&lt;/h1&gt;
&lt;p&gt;Отчет по практике разбивают на разделы и подразделы. При необходимости в работу включают пункты и списки. Разделы практически всегда начинаются с нового листа. Их нумеруют арабскими цифрами в порядке очередности. Название раздела выравнивают по центру, для него используют полужирный шрифт Times New Roman (16 шингл).&lt;/p&gt;
&lt;p&gt;Подразделы нумеруют арабскими цифрами. Для названия разделов используют прописные буквы, для подразделов – строчные (за исключением первой). Последние выравнивают по левому краю, используя красную строку. Для подразделов используют полужирный шрифт (14 шингл).&lt;/p&gt;
&lt;p&gt;Желательно, чтобы название разделов были максимально краткими – переносить слова нельзя. То же касается и  подразделов. Расстояние между названием раздела и заголовком подраздела должно составлять 8 мм.&lt;/p&gt;
&lt;h1 id=&#34;оформление-страницы-поля-и-отступы&#34;&gt;Оформление страницы. Поля и отступы&lt;/h1&gt;
&lt;p&gt;Как уже было сказано ранее, отчет по практике оформляется на листах формата А4. Это требование касается всех листов в работе, включая титульный. На листах не должно быть рамки  и подобных элементов. Достаточно отступов: слева – 30 мм, справа – 10 мм, сверху – 15 мм, снизу – 20 мм.&lt;/p&gt;
&lt;p&gt;Страницы нумеруют, отсчет начинается с титульного листа. Номер на титуле не проставляют.&lt;/p&gt;
&lt;h1 id=&#34;графика-таблицы-и-другие-элементы&#34;&gt;Графика, таблицы и другие элементы&lt;/h1&gt;
&lt;p&gt;В отчете по практике могут присутствовать графические элементы, таблицы и формулы.. Согласно ГОСТ, изображения, таблицы и схемы можно разместить:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;— сразу после абзаца, в котором упоминается элемент;
— на следующей странице;
— в приложении.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Наиболее удобен первый способ: человек, который начнет читать отчет, точно не потеряет важные данные. Он сразу ознакомится со всеми графическими элементами.&lt;/p&gt;
&lt;p&gt;Формулы размещают непосредственно после упоминания. Их выравнивают по центру.&lt;/p&gt;
&lt;p&gt;Формулу можно создать с помощью редактора Equation Editor, а затем вставить в текст работы. Обычно используют 14 шингл для символов в формуле.&lt;/p&gt;
&lt;h1 id=&#34;требования-к-форме-изложения-текста-отчета&#34;&gt;Требования к форме изложения текста отчета&lt;/h1&gt;
&lt;p&gt;Отдельные символы в отчете по практике употреблять нельзя:&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;— значок диаметра (вместо этого пишут слово «диаметр»);
— символ «-« для обозначения отрицательной температуры (вместо этого пишут слово «минус»);
— индексы стандартов без регистрационного номера;
— математические символы &amp;lt;, &amp;gt; и = без чисел.
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;В отчете по практике может быть собственная система наименований или сокращений, но только при наличии соответствующего раздела. Его нужно разместить перед оглавлением.&lt;/p&gt;
&lt;p&gt;Работа над отчетом по практике может показаться тяжелой и муторной, но это совсем не так сложно, как кажется. Текстовый редактор облегчит задачу.&lt;/p&gt;
&lt;p&gt;Ленивому или просто занятому студенту проще доверить оформление отчета автору студенческих работ на StudLance.ru. Главное – предоставить все данные.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Язык разметки Markdown</title>
      <link>https://example.com/ru/post/post2/</link>
      <pubDate>Wed, 20 Mar 2024 00:00:00 +0000</pubDate>
      <guid>https://example.com/ru/post/post2/</guid>
      <description>&lt;h1 id=&#34;markdown&#34;&gt;Markdown&lt;/h1&gt;
&lt;p&gt;Markdown — это язык разметки для текстовых документов. Он позволяет создавать тексты без использования редакторов текста. Тексты разметки Markdown читается и воспроизводится в любой системе ил браузере.&lt;/p&gt;
&lt;p&gt;Markdown создали Джон Грубер и Аарон Шварц в 2004 году. Они преследовали цель создать простой и удобный язык разметки, с помощью которого текст можно перевести в красиво оформленный вид. При этом текст обязан оставаться читаемым даже без приведения к «красивому» виду. Его создали в 2004 году, но наибольшую популярность язык получил в настоящее время. Его множество платформ платформы для блогов, сервисы создания заметок, CMS и даже мессенджеры.&lt;/p&gt;
&lt;h1 id=&#34;как-же-использовать-markdown&#34;&gt;Как же использовать Markdown&lt;/h1&gt;
&lt;p&gt;Для написания чего-либо на языке Markdown можно использовать любой текстовый редактор, однако необходимо полдьзоваться специальной системой разметок. Эта разметка позволяет показать, где будет заголовок, где текст будет жирным или курсивным, а где нужен список или подпункт. Markdown чем-то похож на HTML, но он куда проще и читабельнее. А приобразователи есть в редакторе изначально или скачивается отдельно, но это не составляет большого труда.&lt;/p&gt;
&lt;h1 id=&#34;кто-использует-markdown&#34;&gt;Кто использует Markdown&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Пользователи интернета, которые общаются в мессенджерах и пишут заметки в сервисах, поддерживающих разметку.&lt;/li&gt;
&lt;li&gt;Разработчики, которые пишут с помощью маркдауна документацию для проектов, — им нужен простой и надежный инструмент.&lt;/li&gt;
&lt;li&gt;Контент-менеджеры при наполнении сайтов, которые поддерживают маркдаун. Разметка может использоваться и на веб-страницах.&lt;/li&gt;
&lt;li&gt;Блогеры, пишущие лонгриды, когда оформляют материалы для статей. Многие платформы для написания текстов поддерживают маркдаун, например Notion.&lt;/li&gt;
&lt;li&gt;Писатели и копирайтеры, которым нужен простой инструмент для оформления текста — разметка, читаемая с любого устройства.&lt;/li&gt;
&lt;li&gt;Энтузиасты, которые пользуются разметкой в личных целях: пишут заметки и списки дел, ведут дневники или составляют карточки для запоминания.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;для-чего-же-он-нужен&#34;&gt;Для чего же он нужен&lt;/h1&gt;
&lt;ul&gt;
&lt;li&gt;Написание документации для кода.&lt;/li&gt;
&lt;li&gt;Быстрое форматирование статьи для перевода в PDF или чтобы она просто выглядела красиво без лишних усилий.&lt;/li&gt;
&lt;li&gt;Написание красивых сообщений в мессенджерах.&lt;/li&gt;
&lt;li&gt;Верстка текстового документа для размещения на сайте, но без применения HTML.&lt;/li&gt;
&lt;li&gt;Составление заметок в личном цифровом блокноте.&lt;/li&gt;
&lt;/ul&gt;
&lt;h1 id=&#34;немного-базовых-правил-разметки&#34;&gt;Немного базовых правил разметки&lt;/h1&gt;
&lt;p&gt;&lt;strong&gt;Основной текст&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Для основного текста правила достаточно просты. Символы ставятся либо перед текстом, либо закрывает текст с двух сторон.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Немного примеров&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;# Заголовок 1&lt;/p&gt;
&lt;p&gt;## Заголовок 2&lt;/p&gt;
&lt;p&gt;### Заголовок 3&lt;/p&gt;
&lt;p&gt;Так можно продолжать вплоть до 6-го уровня заголовка.&lt;/p&gt;
&lt;p&gt;Markdown так же приветствует базовое форматирование текста&lt;/p&gt;
&lt;p&gt;*Курсив* или _курсив_  &amp;mdash;&amp;gt;   &lt;em&gt;Курсив&lt;/em&gt; или &lt;em&gt;курсив&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;*&lt;em&gt;Жирный текст*&lt;/em&gt; или _&lt;em&gt;жирный текст_&lt;/em&gt; &amp;mdash;&amp;gt;   &lt;strong&gt;Жирный текст&lt;/strong&gt; или &lt;strong&gt;жирный текст&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;***Жирный курсив*** или ___Жирный курсив___ &amp;mdash;&amp;gt;   &lt;em&gt;&lt;strong&gt;Жирный курсив&lt;/strong&gt;&lt;/em&gt; или &lt;em&gt;&lt;strong&gt;Жирный курсив&lt;/strong&gt;&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;&amp;gt; Цитата (угловая скобка ставится перед каждой строкой цитаты)&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Цитата (угловая скобка ставится перед каждой строкой цитаты)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;— Пункт маркированного списка&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;Первый пункт нумерованного списка (Делается прям как обычно)&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Второй пункт нумерованного списка (и так далее)&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;Еще можно делать списки&lt;/p&gt;
&lt;p&gt;* Элемент первого уровня&lt;/p&gt;
&lt;p&gt;+ Элемент второго уровня&lt;/p&gt;
&lt;p&gt;- Элемент третьего уровня&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Элемент первого уровня
&lt;ul&gt;
&lt;li&gt;Элемент второго уровня
&lt;ul&gt;
&lt;li&gt;Элемент третьего уровня&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;Так же в Markdown можно писать код, если закрывать его в ``` ```&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-fallback&#34; data-lang=&#34;fallback&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;#include &amp;#34;iostream&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;int main(){
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;std :: cout &amp;lt;&amp;lt; &amp;#34;Hello reader!&amp;#34; &amp;lt;&amp;lt; endl;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h1 id=&#34;как-же-начать-работу-с-markdown&#34;&gt;Как же начать работу с Markdown&lt;/h1&gt;
&lt;p&gt;Все достаточно просто:) Всего то нужно скачать или открыть текстовый редактор, который поддерживает нашу разметку&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Управление версиями. Git.</title>
      <link>https://example.com/ru/post/post1/</link>
      <pubDate>Wed, 13 Mar 2024 00:00:00 +0000</pubDate>
      <guid>https://example.com/ru/post/post1/</guid>
      <description>&lt;h1 id=&#34;о-системе-контроля-версий&#34;&gt;О системе контроля версий&lt;/h1&gt;
&lt;p&gt;Что такое «система контроля версий» и почему это важно? Система контроля версий — это система, записывающая изменения в файл или набор файлов в течение времени и позволяющая вернуться позже к определённой версии. Для контроля версий файлов в этой книге в качестве примера будет использоваться исходный код программного обеспечения, хотя на самом деле вы можете использовать контроль версий практически для любых типов файлов.&lt;/p&gt;
&lt;p&gt;Если вы графический или web-дизайнер и хотите сохранить каждую версию изображения или макета (скорее всего, захотите), система контроля версий (далее VCS) — как раз то, что нужно. Она позволяет вернуть файлы к состоянию, в котором они были до изменений, вернуть проект к исходному состоянию, увидеть изменения, увидеть, кто последний менял что-то и вызвал проблему, кто поставил задачу и когда и многое другое. Использование VCS также значит в целом, что, если вы сломали что-то или потеряли файлы, вы спокойно можете всё исправить. В дополнение ко всему вы получите всё это без каких-либо дополнительных усилий.&lt;/p&gt;
&lt;h2 id=&#34;локальные-системы-контроля-версий&#34;&gt;Локальные системы контроля версий&lt;/h2&gt;
&lt;p&gt;Многие люди в качестве метода контроля версий применяют копирование файлов в отдельный каталог (возможно даже, каталог с отметкой по времени, если они достаточно сообразительны). Данный подход очень распространён из-за его простоты, однако он невероятно сильно подвержен появлению ошибок. Можно легко забыть в каком каталоге вы находитесь и случайно изменить не тот файл или скопировать не те файлы, которые вы хотели.&lt;/p&gt;
&lt;p&gt;Для того, чтобы решить эту проблему, программисты давным-давно разработали локальные VCS с простой базой данных, которая хранит записи о всех изменениях в файлах, осуществляя тем самым контроль ревизий.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;Локальный контроль версий&#34; srcset=&#34;
               /ru/post/post1/1_hufcb633eabb4ce248b64f5422c2c69f5a_20255_7dea048445c495e32aed14824d931f27.webp 400w,
               /ru/post/post1/1_hufcb633eabb4ce248b64f5422c2c69f5a_20255_a2a703ac3f8d04f25559d7442adff88c.webp 760w,
               /ru/post/post1/1_hufcb633eabb4ce248b64f5422c2c69f5a_20255_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;https://example.com/ru/post/post1/1_hufcb633eabb4ce248b64f5422c2c69f5a_20255_7dea048445c495e32aed14824d931f27.webp&#34;
               width=&#34;760&#34;
               height=&#34;649&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;Одной из популярных VCS была система RCS, которая и сегодня распространяется со многими компьютерами. RCS хранит на диске наборы патчей (различий между файлами) в специальном формате, применяя которые она может воссоздавать состояние каждого файла в заданный момент времени.&lt;/p&gt;
&lt;h2 id=&#34;централизованные-системы-контроля-версий&#34;&gt;Централизованные системы контроля версий&lt;/h2&gt;
&lt;p&gt;Следующая серьёзная проблема, с которой сталкиваются люди, — это необходимость взаимодействовать с другими разработчиками. Для того, чтобы разобраться с ней, были разработаны централизованные системы контроля версий (Centralized Version Control System, далее CVCS). Такие системы, как CVS, Subversion и Perforce, используют единственный сервер, содержащий все версии файлов, и некоторое количество клиентов, которые получают файлы из этого централизованного хранилища. Применение CVCS являлось стандартом на протяжении многих лет.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;Централизованный контроль версий&#34; srcset=&#34;
               /ru/post/post1/2_hu74fb508a0af33a33fa0f541a94378552_22810_5270c9cc3d509c774dbcc76125f1c678.webp 400w,
               /ru/post/post1/2_hu74fb508a0af33a33fa0f541a94378552_22810_42d0eeea6ea2b8ccc599ff10f2bcf79c.webp 760w,
               /ru/post/post1/2_hu74fb508a0af33a33fa0f541a94378552_22810_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;https://example.com/ru/post/post1/2_hu74fb508a0af33a33fa0f541a94378552_22810_5270c9cc3d509c774dbcc76125f1c678.webp&#34;
               width=&#34;760&#34;
               height=&#34;528&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;Такой подход имеет множество преимуществ, особенно перед локальными VCS. Например, все разработчики проекта в определённой степени знают, чем занимается каждый из них. Администраторы имеют полный контроль над тем, кто и что может делать, и гораздо проще администрировать CVCS, чем оперировать локальными базами данных на каждом клиенте.&lt;/p&gt;
&lt;p&gt;Несмотря на это, данный подход тоже имеет серьёзные минусы. Самый очевидный минус — это единая точка отказа, представленная централизованным сервером. Если этот сервер выйдет из строя на час, то в течение этого времени никто не сможет использовать контроль версий для сохранения изменений, над которыми работает, а также никто не сможет обмениваться этими изменениями с другими разработчиками. Если жёсткий диск, на котором хранится центральная БД, повреждён, а своевременные бэкапы отсутствуют, вы потеряете всё — всю историю проекта, не считая единичных снимков репозитория, которые сохранились на локальных машинах разработчиков. Локальные VCS страдают от той же самой проблемы: когда вся история проекта хранится в одном месте, вы рискуете потерять всё.&lt;/p&gt;
&lt;h2 id=&#34;распределённые-системы-контроля-версий&#34;&gt;Распределённые системы контроля версий&lt;/h2&gt;
&lt;p&gt;Здесь в игру вступают распределённые системы контроля версий (Distributed Version Control System, далее DVCS). В DVCS (таких как Git, Mercurial, Bazaar или Darcs) клиенты не просто скачивают снимок всех файлов (состояние файлов на определённый момент времени) — они полностью копируют репозиторий. В этом случае, если один из серверов, через который разработчики обменивались данными, умрёт, любой клиентский репозиторий может быть скопирован на другой сервер для продолжения работы. Каждая копия репозитория является полным бэкапом всех данных.&lt;/p&gt;
&lt;p&gt;















&lt;figure  &gt;
  &lt;div class=&#34;d-flex justify-content-center&#34;&gt;
    &lt;div class=&#34;w-100&#34; &gt;&lt;img alt=&#34;Распределённый контроль версий&#34; srcset=&#34;
               /ru/post/post1/2_hu74fb508a0af33a33fa0f541a94378552_22810_5270c9cc3d509c774dbcc76125f1c678.webp 400w,
               /ru/post/post1/2_hu74fb508a0af33a33fa0f541a94378552_22810_42d0eeea6ea2b8ccc599ff10f2bcf79c.webp 760w,
               /ru/post/post1/2_hu74fb508a0af33a33fa0f541a94378552_22810_1200x1200_fit_q75_h2_lanczos_3.webp 1200w&#34;
               src=&#34;https://example.com/ru/post/post1/2_hu74fb508a0af33a33fa0f541a94378552_22810_5270c9cc3d509c774dbcc76125f1c678.webp&#34;
               width=&#34;760&#34;
               height=&#34;528&#34;
               loading=&#34;lazy&#34; data-zoomable /&gt;&lt;/div&gt;
  &lt;/div&gt;&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;Более того, многие DVCS могут одновременно взаимодействовать с несколькими удалёнными репозиториями, благодаря этому вы можете работать с различными группами людей, применяя различные подходы единовременно в рамках одного проекта. Это позволяет применять сразу несколько подходов в разработке, например, иерархические модели, что совершенно невозможно в централизованных системах.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>
